{"ast":null,"code":"var _jsxFileName = \"/Users/nattapon/Desktop/All works/Web/covid19.deepverse.io/Frontend/src/components/LineChart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\n\nconst LineChart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await axios.get('/daily'));\n    };\n\n    fetchAPI();\n  }, [setDailyData]);\n  console.log(dailyData);\n  const data = {\n    labels: dailyData.map(({\n      date\n    }) => date),\n    datasets: [{\n      data: dailyData.map(({\n        confirmed\n      }) => confirmed),\n      label: 'Infected',\n      borderColor: ['rgba(255, 206, 86, 0.2)'],\n      backgroundColor: ['rgba(255, 206, 86, 0.2)'],\n      pointBackgroundColor: 'rgba(255, 206, 86, 0.2)',\n      pointBorderColor: 'rgba(255, 206, 86, 0.2)'\n    }, {\n      label: 'Deaths',\n      data: dailyData.map(({\n        deaths\n      }) => deaths),\n      borderColor: ['rgba(54, 162, 235, 0.2)'],\n      backgroundColor: ['rgba(54, 162, 235, 0.2)'],\n      pointBackgroundColor: 'rgba(54, 162, 235, 0.2)',\n      pointBorderColor: 'rgba(54, 162, 235, 0.2)'\n    }]\n  }; //   labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May'],\n  //   datasets: [\n  //     {\n  //       label: 'Sales for 2020 (M)',\n  //       data: [3, 2, 2, 1, 5],\n  //       borderColor: ['rgba(255, 206, 86, 0.2)'],\n  //       backgroundColor: ['rgba(255, 206, 86, 0.2)'],\n  //       pointBackgroundColor: 'rgba(255, 206, 86, 0.2)',\n  //       pointBorderColor: 'rgba(255, 206, 86, 0.2)',\n  //     },\n  //     {\n  //       label: 'Sales for 2019 (M)',\n  //       data: [1, 3, 2, 2, 3],\n  //       borderColor: ['rgba(54, 162, 235, 0.2)'],\n  //       backgroundColor: ['rgba(54, 162, 235, 0.2)'],\n  //       pointBackgroundColor: 'rgba(54, 162, 235, 0.2)',\n  //       pointBorderColor: 'rgba(54, 162, 235, 0.2)',\n  //     },\n  //   ],\n  // };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Line, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default LineChart;","map":{"version":3,"sources":["/Users/nattapon/Desktop/All works/Web/covid19.deepverse.io/Frontend/src/components/LineChart.js"],"names":["React","useState","useEffect","Line","axios","LineChart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","get","console","log","labels","map","date","datasets","label","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEC,MAAMC,SAAS,GAAC,CAAC;AAACC,EAAAA,IAAI,EAAC;AAACC,IAAAA,SAAD;AAAWC,IAAAA,SAAX;AAAqBC,IAAAA;AAArB,GAAN;AAAmCC,EAAAA;AAAnC,CAAD,KAA+C;AAC9D,QAAM,CAAEC,SAAF,EAAYC,YAAZ,IAA2BX,QAAQ,CAAC,EAAD,CAAzC;AACAC,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMW,QAAQ,GAAE,YAAS;AACrBD,MAAAA,YAAY,CAAC,MAAMR,KAAK,CAACU,GAAN,CAAU,QAAV,CAAP,CAAZ;AACH,KAFD;;AAGAD,IAAAA,QAAQ;AACX,GALU,EAKT,CAACD,YAAD,CALS,CAAT;AAMDG,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AAEC,QAAML,IAAI,GAAG;AAACW,IAAAA,MAAM,EAACN,SAAS,CAACO,GAAV,CAAc,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAUA,IAAxB,CAAR;AACbC,IAAAA,QAAQ,EAAC,CAAC;AAACd,MAAAA,IAAI,EAACK,SAAS,CAACO,GAAV,CAAc,CAAC;AAACX,QAAAA;AAAD,OAAD,KAAeA,SAA7B,CAAN;AACRc,MAAAA,KAAK,EAAC,UADE;AAEVC,MAAAA,WAAW,EAAE,CAAC,yBAAD,CAFH;AAGHC,MAAAA,eAAe,EAAE,CAAC,yBAAD,CAHd;AAIHC,MAAAA,oBAAoB,EAAE,yBAJnB;AAKJC,MAAAA,gBAAgB,EAAE;AALd,KAAD,EAMH;AACQJ,MAAAA,KAAK,EAAE,QADf;AAEQf,MAAAA,IAAI,EAACK,SAAS,CAACO,GAAV,CAAc,CAAC;AAACT,QAAAA;AAAD,OAAD,KAAYA,MAA1B,CAFb;AAGQa,MAAAA,WAAW,EAAE,CAAC,yBAAD,CAHrB;AAIQC,MAAAA,eAAe,EAAE,CAAC,yBAAD,CAJzB;AAKQC,MAAAA,oBAAoB,EAAE,yBAL9B;AAMQC,MAAAA,gBAAgB,EAAE;AAN1B,KANG;AADI,GAAb,CAV8D,CA4B9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACE,uDACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEnB,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CArDA;;AAuDD,eAAeD,SAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport { Line } from 'react-chartjs-2'; \nimport axios from 'axios';\n\n const LineChart=({data:{confirmed,recovered,deaths},country})=>{\n  const [ dailyData,setDailyData] =useState([]);\n  useEffect(()=>{\n    const fetchAPI =async()=>{\n        setDailyData(await axios.get('/daily'));\n    }\n    fetchAPI();\n},[setDailyData]);\n console.log(dailyData)\n\n  const data = {labels:dailyData.map(({date})=>date),\n  datasets:[{data:dailyData.map(({confirmed})=>confirmed),\n    label:'Infected',\n  borderColor: ['rgba(255, 206, 86, 0.2)'],\n         backgroundColor: ['rgba(255, 206, 86, 0.2)'],\n         pointBackgroundColor: 'rgba(255, 206, 86, 0.2)',\n        pointBorderColor: 'rgba(255, 206, 86, 0.2)',},\n        {\n                label: 'Deaths',\n                data:dailyData.map(({deaths})=>deaths),\n                borderColor: ['rgba(54, 162, 235, 0.2)'],\n                backgroundColor: ['rgba(54, 162, 235, 0.2)'],\n                pointBackgroundColor: 'rgba(54, 162, 235, 0.2)',\n                pointBorderColor: 'rgba(54, 162, 235, 0.2)',\n              },\n      ]\n  \n  }\n  //   labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May'],\n  //   datasets: [\n  //     {\n  //       label: 'Sales for 2020 (M)',\n  //       data: [3, 2, 2, 1, 5],\n  //       borderColor: ['rgba(255, 206, 86, 0.2)'],\n  //       backgroundColor: ['rgba(255, 206, 86, 0.2)'],\n  //       pointBackgroundColor: 'rgba(255, 206, 86, 0.2)',\n  //       pointBorderColor: 'rgba(255, 206, 86, 0.2)',\n  //     },\n  //     {\n  //       label: 'Sales for 2019 (M)',\n  //       data: [1, 3, 2, 2, 3],\n  //       borderColor: ['rgba(54, 162, 235, 0.2)'],\n  //       backgroundColor: ['rgba(54, 162, 235, 0.2)'],\n  //       pointBackgroundColor: 'rgba(54, 162, 235, 0.2)',\n  //       pointBorderColor: 'rgba(54, 162, 235, 0.2)',\n  //     },\n  //   ],\n  // };\n  return (\n    <>\n      <Line data={data} />\n    </>\n  );\n}\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}