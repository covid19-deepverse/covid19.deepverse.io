{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nattapon/Desktop/All works/Web/covid19.deepverse.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nattapon/Desktop/All works/Web/covid19.deepverse.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';var url='https://covid19.mathdro.id/api';export var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(country){var changeableUrl,_yield$axios$get,_yield$axios$get$data,confirmed,recovered,deaths,lastUpdate;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:changeableUrl=url;if(country){changeableUrl=\"\".concat(url,\"/countries/\").concat(country);}_context.prev=2;_context.next=5;return axios.get(changeableUrl);case 5:_yield$axios$get=_context.sent;_yield$axios$get$data=_yield$axios$get.data;confirmed=_yield$axios$get$data.confirmed;recovered=_yield$axios$get$data.recovered;deaths=_yield$axios$get$data.deaths;lastUpdate=_yield$axios$get$data.lastUpdate;return _context.abrupt(\"return\",{confirmed:confirmed,recovered:recovered,deaths:deaths,lastUpdate:lastUpdate});case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);console.log(_context.t0);case 17:case\"end\":return _context.stop();}}},_callee,null,[[2,14]]);}));return function fetchData(_x){return _ref.apply(this,arguments);};}();export var fetchDailyData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$axios$get2,data,modifiedData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.get(\"\".concat(url,\"/daily\"));case 3:_yield$axios$get2=_context2.sent;data=_yield$axios$get2.data;// console.log(data);\nmodifiedData=data.map(function(dailyData){return{confirmed:dailyData.confirmed.total,deaths:dailyData.deaths.total,date:dailyData.reportDate};});console.log(modifiedData);return _context2.abrupt(\"return\",modifiedData);case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,10]]);}));return function fetchDailyData(){return _ref2.apply(this,arguments);};}();export var fetchCountries=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _yield$axios$get3,countries;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return axios.get(\"\".concat(url,\"/countries\"));case 3:_yield$axios$get3=_context3.sent;countries=_yield$axios$get3.data.countries;return _context3.abrupt(\"return\",countries.map(function(country){return country.name;}));case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 11:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return function fetchCountries(){return _ref3.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/nattapon/Desktop/All works/Web/covid19.deepverse.io/src/api/index.js"],"names":["axios","url","fetchData","country","changeableUrl","get","data","confirmed","recovered","deaths","lastUpdate","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name"],"mappings":"+VAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,GAAG,CAAC,gCAAV,CAEA,MAAO,IAAMC,CAAAA,SAAS,0FAAE,iBAAOC,OAAP,iNAChBC,aADgB,CACFH,GADE,CAEpB,GAAGE,OAAH,CAAW,CACPC,aAAa,WAAIH,GAAJ,uBAAqBE,OAArB,CAAb,CACH,CAJmB,sCAM4CH,CAAAA,KAAK,CAACK,GAAN,CAAUD,aAAV,CAN5C,8EAMTE,IANS,CAMHC,SANG,uBAMHA,SANG,CAMOC,SANP,uBAMOA,SANP,CAMiBC,MANjB,uBAMiBA,MANjB,CAMwBC,UANxB,uBAMwBA,UANxB,iCAQT,CAACH,SAAS,CAATA,SAAD,CAAWC,SAAS,CAATA,SAAX,CAAqBC,MAAM,CAANA,MAArB,CAA4BC,UAAU,CAAVA,UAA5B,CARS,4DAkBhBC,OAAO,CAACC,GAAR,cAlBgB,qEAAF,kBAATV,CAAAA,SAAS,4CAAf,CAuBP,MAAO,IAAMW,CAAAA,cAAc,2FAAE,wNAEDb,CAAAA,KAAK,CAACK,GAAN,WAAaJ,GAAb,WAFC,yCAEdK,IAFc,mBAEdA,IAFc,CAGrB;AACMQ,YAJe,CAIDR,IAAI,CAACS,GAAL,CAAS,SAACC,SAAD,QAAc,CACvCT,SAAS,CAACS,SAAS,CAACT,SAAV,CAAoBU,KADS,CAEvCR,MAAM,CAACO,SAAS,CAACP,MAAV,CAAiBQ,KAFe,CAGvCC,IAAI,CAACF,SAAS,CAACG,UAHwB,CAAd,EAAT,CAJC,CAUrBR,OAAO,CAACC,GAAR,CAAYE,YAAZ,EAVqB,iCAWdA,YAXc,sIAAF,kBAAdD,CAAAA,cAAc,2CAApB,CAkBP,MAAO,IAAMO,CAAAA,cAAc,2FAAE,gNAEUpB,CAAAA,KAAK,CAACK,GAAN,WAAaJ,GAAb,eAFV,yCAERoB,SAFQ,mBAEdf,IAFc,CAERe,SAFQ,kCAIdA,SAAS,CAACN,GAAV,CAAc,SAACZ,OAAD,QAAWA,CAAAA,OAAO,CAACmB,IAAnB,EAAd,CAJc,6DAMrBX,OAAO,CAACC,GAAR,eANqB,sEAAF,kBAAdQ,CAAAA,cAAc,2CAApB","sourcesContent":["import axios from 'axios';\n\nconst url='https://covid19.mathdro.id/api';\n\nexport const fetchData =async (country)=>{\n    let changeableUrl=url;\n    if(country){\n        changeableUrl=`${url}/countries/${country}`\n    }\n    try{\n        const {data:{confirmed,recovered,deaths,lastUpdate}} =await axios.get(changeableUrl);\n        \n        return {confirmed,recovered,deaths,lastUpdate};\n        // const modifiedData={\n        //     confirmed:data.confirmed,\n        //     recovered:data.recovered,\n        //     deaths:data.deaths,\n        //     lastUpdate:data.lastUpdate\n        // }\n        // return modifiedData;\n    }\n    catch(error){\n        console.log(error)\n    \n    }\n}\n\nexport const fetchDailyData =async ()=>{\n    try{\n        const {data} =await axios.get(`${url}/daily`);\n        // console.log(data);\n        const modifiedData =data.map((dailyData)=>({\n            confirmed:dailyData.confirmed.total,\n            deaths:dailyData.deaths.total,\n            date:dailyData.reportDate\n\n        }))\n        console.log(modifiedData)\n        return modifiedData;\n    }\n    catch(error){\n\n    }\n}\n\nexport const fetchCountries =async ()=>{\n    try {\n        const {data:{countries}}=await axios.get(`${url}/countries`);\n        // console.log(respone)\n        return countries.map((country)=>country.name);\n    } catch (error) {\n        console.log(error)\n    }\n} "]},"metadata":{},"sourceType":"module"}